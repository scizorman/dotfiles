#!/usr/bin/env zsh
{{ if eq .chezmoi.os "linux" }}
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
{{ else if eq .chezmoi.os "darwin" }}
eval "$(/opt/homebrew/bin/brew shellenv)"
export PATH="${HOME}/.rd/bin:${PATH}"
export LDFLAGS="-L$(xcrun --show-sdk-path)/usr/lib"
{{ end }}

export \
  EDITOR='nvim' \
  PAGER='bat' \
  GPG_TTY="$(tty)"

{{ if eq .chezmoi.os "linux" -}}
{{   if (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
export \
  AWS_VAULT_BACKEND='pass' \
  AWS_VAULT_PASS_PREFIX='aws-vault'
{{   end }}
{{ end }}

export \
  VOLTA_HOME="${HOME}/.volta"

eval "$(mise activate zsh)"

path=( \
  ${VOLTA_HOME}/bin(N-/) \
  ${XDG_DATA_HOME}/aquaproj-aqua/bin(N-/) \
  ${HOMEBREW_PREFIX}/opt/*/libexec/gnubin(N-/) \
  ${HOME}/.local/bin(N-/) \
  $path \
)
manpath=( \
  ${HOMEBREW_PREFIX}/opt/*/libexec/gnuman(N-/) \
  $manpath \
)

# Shell Completion Setup
mkdir -p "${XDG_CACHE_HOME}/zsh/site-functions"

op completion zsh >! "${XDG_CACHE_HOME}/zsh/site-functions/_op"
aqua completion zsh >! "${XDG_CACHE_HOME}/zsh/site-functions/_aqua"
aws-vault --completion-script-zsh >! "${XDG_CACHE_HOME}/zsh/site-functions/_aws-vault"
buf completion zsh >! "${XDG_CACHE_HOME}/zsh/site-functions/_buf"
chezmoi completion zsh >! "${XDG_CACHE_HOME}/zsh/site-functions/_chezmoi"
deno completions zsh >! "${XDG_CACHE_HOME}/zsh/site-functions/_deno"
docker completion zsh >! "${XDG_CACHE_HOME}/zsh/site-functions/_docker"
mise completion zsh >! "${XDG_CACHE_HOME}/zsh/site-functions/_mise"
rg --generate complete-zsh >! "${XDG_CACHE_HOME}/zsh/site-functions/_rg"
rustup completions zsh rustup >! "${XDG_CACHE_HOME}/zsh/site-functions/_rustup"
rustup completions zsh cargo >! "${XDG_CACHE_HOME}/zsh/site-functions/_cargo"
snow --show-completion >! "${XDG_CACHE_HOME}/zsh/site-functions/_snow"
uv generate-shell-completion zsh >! "${XDG_CACHE_HOME}/zsh/site-functions/_uv"
yq completion zsh >! ${XDG_CACHE_HOME}/zsh/site-functions/_yq

chmod -R +x "${XDG_CACHE_HOME}/zsh/site-functions"
